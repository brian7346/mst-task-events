{"version":3,"sources":["actions/modalActions.js","actions/types.js","components/AppNavbar.js","components/ShoppingList.js","components/ItemModal.js","config/config.js","reducers/itemReducer.js","reducers/modalHandlerReducer.js","reducers/eventsReducer.js","reducers/index.js","store.js","App.js","actions/eventsActions.js","serviceWorker.js","index.js"],"names":["handleAddModal","value","type","AppNavbar","dispatch","this","props","react_default","a","createElement","className","reactstrap_es","style","color","onClick","background","border","marginRight","window","location","reload","Component","connect","state","ShoppingList","hover","deleteEvent","id","_this","toggleHover","setState","hoverId","_this2","events","event","_this$state","height","react_transition_group","marginTop","map","_ref","_id","name","eventTime","eventDescription","eventImportant","key","timeout","classNames","onMouseEnter","onMouseLeave","margin","borderLeft","concat","borderRadius","display","justifyContent","cursor","item","ItemModal","moment","onFocus","nameInvalid","toggle","addEvent","e","newEvent","format","uuid","saveEvent","checkBoxChange","onChange","Object","defineProperty","target","onBlur","timeChanged","modalHandler","_this$state2","descriptionInvalid","isOpen","addEventModalOpen","flexDirection","placeholder","invalid","rc_time_picker_es","defaultValue","showSecond","check","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initialState","items","loading","editEventModalOpen","modalData","combineReducers","arguments","length","undefined","action","objectSpread","payload","filter","toConsumableArray","i","middleWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","db","push","set","child","remove","app","firebase","initializeApp","database","ref","on","snap","val","es","minWidth","components_AppNavbar","components_ItemModal","components_ShoppingList","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.407635e3.chunk.js","sourcesContent":["import {\r\n    HANDLE_ADD_EVENT_MODAL\r\n} from './types'\r\n\r\nexport const handleAddModal = value => ({\r\n    type: HANDLE_ADD_EVENT_MODAL,\r\n    value\r\n})","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\n\nexport const HANDLE_ADD_EVENT_MODAL = \"HANDLE_ADD_EVENT_MODAL\";\nexport const HANDLE_EDIT_EVENT_MODAL = \"HANDLE_EDIT_EVENT_MODAL\";\n\nexport const ADD_EVENT = \"ADD_EVENT\";\nexport const DELETE_EVENT = 'DELETE_EVENT'\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Container\n} from \"reactstrap\";\nimport { connect } from 'react-redux'\n\nimport{ handleAddModal } from '../actions/modalActions'\n\nimport './style.css'\n\nclass AppNavbar extends Component {\n  render() {\n    const { dispatch } = this.props;\n    return (\n      <div className=\"app-navbar\">\n        <Container className=\"header-container\">\n          <div className=\"header-content\">\n            <div className=\"header-left-column\">\n              <h6 style={{color: 'white'}}>Мой календарь</h6>\n              <div className=\"heder-buttons\">\n                <Button\n                  onClick={() => dispatch(handleAddModal(true))}\n                  style={{\n                    background: '#a9d85f',\n                    border: 'none',\n                    marginRight: 30\n                  }}\n                >\n                  Событие +\n                </Button>\n                <Button \n                  onClick={() => window.location.reload()}\n                  style={{\n                    background: 'transparent',\n                    border: '1px solid #a9d85f'\n                  }}>\n                  Обновить\n                </Button>\n              </div>\n            </div>\n            <div className=\"header-right-column\">\n              <h3>Друзья, мои походы пока ещё <br />\n                не закончились, делюсь с вами!</h3>\n            </div>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({state}), \n  dispatch => ({dispatch})\n)(AppNavbar);\n","import React, { Component } from \"react\";\nimport { Container, ListGroup, ListGroupItem, Button, Col } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass ShoppingList extends Component {\n  state = {\n    hover: false,\n  }\n\n  deleteEvent = id => {\n    this.props.deleteEvent(id)\n  };\n\n  toggleHover = (id, hover) =>{\n    this.setState({hover, hoverId: id})\n  }\n  render() {\n    const { events } = this.props.event;\n    const { hoverId, hover } = this.state;\n    return (\n      <div style={{ background: '#f6f6f6'}}>\n        <Container style={{height: '100vh'}}>\n          <ListGroup>\n            <TransitionGroup className=\"shopping-list\" style={{marginTop: 10}}>\n              {events.map(({ _id, name, eventTime, eventDescription, eventImportant }) => (\n                <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n                  <ListGroupItem \n                    className=\"event-item\"\n                    onMouseEnter={() => this.toggleHover(_id, true)} \n                    onMouseLeave={() => this.toggleHover(null, false)}\n                    style={{\n                      margin: '10px auto',\n                      border: 'none',\n                      borderLeft: `${hoverId === _id && hover ? \n                        '7px' : '3px'} solid ${eventImportant ? '#ff7eb5' : '#a9d85f'}`,\n                      borderRadius: 2,\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    }}>\n                   <div className='event-time'>\n                     <h3>{eventTime}</h3>\n                   </div>\n                   <div className='event-desc'>\n                   <h3>{name}</h3>\n                   <p>{eventDescription}</p>\n                   </div>\n                   <div className='event-delete'>\n                     <h6 onClick={() => this.deleteEvent(_id)} style={{cursor: 'pointer'}}>X</h6>\n                   </div>\n                  </ListGroupItem>\n                </CSSTransition>\n              ))}\n            </TransitionGroup>\n          </ListGroup>\n        </Container>\n      </div>\n    );\n  }\n}\n\nShoppingList.propTypes = {\n  // getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired,\n  event: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  event: state.event\n});\n\nexport default connect(\n  mapStateToProps,\n  dispatch => ({dispatch})\n)(ShoppingList);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormFeedback,\n} from \"reactstrap\";\nimport TimePicker from 'rc-time-picker';\nimport { connect } from \"react-redux\";\nimport uuid from 'uuid';\nimport moment from 'moment';\nimport 'rc-time-picker/assets/index.css';\n\nimport { handleAddModal } from \"../actions/modalActions\";\n\nclass ItemModal extends Component {\n  state = {\n    name: \"\",\n    eventTime: moment(),\n    eventDescription: 'Описание не указанно',\n    eventImportant: false,\n    onFocus: \"\",\n    nameInvalid: false,\n  };\n\n  toggle = () => {\n    const { dispatch } = this.props;\n    dispatch(handleAddModal(false))\n  };\n\n  addEvent = e => {\n    const {\n      name,\n      eventTime,\n      eventDescription,\n      eventImportant\n    } = this.state;\n\n    if(name !== ''){\n      const newEvent = {\n        name,\n        eventTime: eventTime ? eventTime.format('HH:mm') : moment().format('HH:mm'),\n        eventDescription,\n        eventImportant,\n        _id: uuid()\n      };\n\n      this.props.saveEvent(newEvent)\n  \n      // this.props.dispatch(addEvent(newEvent))\n  \n      this.toggle();\n      this.setState({\n        name: \"\",\n        eventTime: moment(),\n        eventDescription: 'Описание не указанно',\n        eventImportant: false,\n        onFocus: \"\",\n        nameInvalid: false,\n      })\n    } else {\n        this.setState({nameInvalid: true})\n    }\n  };\n\n  checkBoxChange = () => {\n    const { eventImportant } = this.state;\n    this.setState({ eventImportant: !eventImportant });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onFocus = e => {\n    this.setState({ ['onFocus']: e.target.name });\n  }\n\n  onBlur = e => {\n    switch(e.target.name){\n      case 'name':\n        if(e.target.value === '') {\n          this.setState({nameInvalid: true})\n        } else {\n          this.setState({nameInvalid: false})\n        }\n    }\n  }\n\n  timeChanged = eventTime => {\n    this.setState({ eventTime });\n  }\n  render() {\n    const { modalHandler } = this.props;\n    const {\n      nameInvalid,\n      descriptionInvalid\n    } = this.state;\n    return (\n      <Modal isOpen={modalHandler.addEventModalOpen}>\n        <ModalHeader toggle={this.toggle} style={{border: 'none'}}/>\n        <ModalBody>\n          <Form >\n            <FormGroup style={{display:'flex', flexDirection: 'column'}}>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"item\"\n                placeholder=\"Событие\"\n                onChange={this.onChange}\n                invalid={nameInvalid}\n                // onFocus={this.onFocus}\n                onBlur={this.onBlur}\n                // style={{\n                //   all: 'unset',\n                //   border: 'none',\n                //   borderBottom: onFocus === 'name' ? '2px solid #a9d85f' : \n                //     '1px solid #cccccc'\n                // }}\n              />\n              <FormFeedback>Название обязательно!</FormFeedback>\n            </FormGroup>\n            <FormGroup>\n              <TimePicker \n                defaultValue={moment()} \n                // placeholder=\"Время\"\n                showSecond={false} \n                onChange={this.timeChanged}\n              /> <span style={{color: '#495057'}}>Время начала</span>\n            </FormGroup>\n            <FormGroup>\n              <Input \n                type=\"textarea\"\n                placeholder=\"Описание\"\n                name=\"eventDescription\"\n                invalid={descriptionInvalid}\n                onChange={this.onChange}\n              />\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input \n                  type=\"checkbox\" \n                  name=\"eventImportant\"\n                  onChange={this.checkBoxChange}\n                /> Пометить событие как важное\n              </Label>\n            </FormGroup>\n            <FormGroup>\n              <Button\n                onClick={() => this.addEvent()}\n                style={{\n                  marginTop: \"2rem\",\n                  background: '#a9d85f',\n                  border: 'none'\n                }}\n              >\n                Готово\n              </Button>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  modalHandler: state.modalHandler\n});\n\nexport default connect(\n  mapStateToProps,\n  dispatch => ({dispatch})\n)(ItemModal);\n","export const config = {\r\n    apiKey: \"AIzaSyBo564hzKyaNN-tcDGje1hjbAl1XUxxhfs\",\r\n    authDomain: \"mst-task.firebaseapp.com\",\r\n    databaseURL: \"https://mst-task.firebaseio.com\",\r\n    projectId: \"mst-task\",\r\n    storageBucket: \"mst-task.appspot.com\",\r\n    messagingSenderId: \"990000810916\"\r\n};","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [action.payload, ...state.items]\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { \r\n    HANDLE_ADD_EVENT_MODAL,\r\n    HANDLE_EDIT_EVENT_MODAL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    addEventModalOpen: false,\r\n    editEventModalOpen: false,\r\n    modalData: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case HANDLE_ADD_EVENT_MODAL:\r\n        return {\r\n          ...state,\r\n          addEventModalOpen: action.value,\r\n        };\r\n      case HANDLE_EDIT_EVENT_MODAL:\r\n        return {\r\n          ...state,\r\n        editEventModalOpen: action.value,\r\n        modalData: action.modalData\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    ADD_EVENT,\r\n    DELETE_EVENT\r\n  } from \"../actions/types\";\r\n\r\n  const initialState = {\r\n    events: []\r\n  };\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_EVENT:\r\n        return {\r\n          ...state,\r\n          events: [...state.events, action.event],\r\n        };\r\n      case DELETE_EVENT:\r\n        return {\r\n          ...state,\r\n          events: state.events.filter(i => action.id !== i._id),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { combineReducers } from \"redux\";\nimport itemReducer from \"./itemReducer\";\nimport modalHandlerReducer from \"./modalHandlerReducer\";\nimport eventsReducer from \"./eventsReducer\";\n\n\nexport default combineReducers({\n  item: itemReducer,\n  modalHandler: modalHandlerReducer,\n  event: eventsReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleWare = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleWare))\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport AppNavbar from \"./components/AppNavbar\";\nimport ShoppingList from \"./components/ShoppingList\";\nimport ItemModalComponent from \"./components/ItemModal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { config } from './config/config';\nimport firebase from 'firebase';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { addEvent, deleteEvent } from './actions/eventsActions'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.app = firebase.initializeApp(config);\n    this.db =  this.app.database().ref().child('events')\n  }\n\n  saveEvent = event => {\n    const newEvent = this.db.push();\n    newEvent.set(event)\n  }\n\n  deleteEvent = id => {\n    this.db.child(id).remove()\n  }\n\n  componentDidMount(){\n    this.db.on('child_added', snap => {\n      const event = {\n        name: snap.val().name,\n        eventDescription: snap.val().eventDescription,\n        eventImportant: snap.val().eventImportant,\n        eventTime: snap.val().eventTime,\n        _id: snap.key\n      }\n      store.dispatch(addEvent(event))\n    })\n\n    this.db.on('child_removed', snap => {\n      store.dispatch(deleteEvent(snap.key))\n    })\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div style={{minWidth: 460}}>\n          <AppNavbar />\n          <ItemModalComponent saveEvent={event => this.saveEvent(event)}/>\n          <ShoppingList deleteEvent={id => this.deleteEvent(id)}/>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n","import { ADD_EVENT } from \"./types\";\r\n\r\nexport const addEvent = event => ({\r\n    type: 'ADD_EVENT',\r\n    event\r\n});\r\n\r\nexport const deleteEvent = id => ({\r\n    type: 'DELETE_EVENT',\r\n    id\r\n});","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}