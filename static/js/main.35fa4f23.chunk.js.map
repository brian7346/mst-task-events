{"version":3,"sources":["actions/modalActions.js","actions/types.js","components/AppNavbar.js","components/ShoppingList.js","components/ItemModal.js","config/config.js","reducers/itemReducer.js","reducers/modalHandlerReducer.js","reducers/eventsReducer.js","reducers/index.js","store.js","App.js","actions/eventsActions.js","serviceWorker.js","index.js"],"names":["handleAddModal","value","type","AppNavbar","dispatch","this","props","react_default","a","createElement","className","reactstrap_es","style","color","onClick","background","border","marginRight","window","location","reload","Component","connect","state","ShoppingList","hover","deleteEvent","id","_this","toggleHover","setState","hoverId","_this2","events","event","_this$state","height","react_transition_group","marginTop","map","_ref","_id","name","eventTime","eventDescription","eventImportant","key","timeout","classNames","onMouseEnter","onMouseLeave","margin","borderLeft","concat","borderRadius","display","justifyContent","cursor","item","ItemModal","moment","onFocus","nameInvalid","toggle","addEvent","e","newEvent","format","uuid","saveEvent","checkBoxChange","onChange","Object","defineProperty","target","onBlur","timeChanged","modalHandler","_this$state2","descriptionInvalid","isOpen","addEventModalOpen","flexDirection","placeholder","invalid","rc_time_picker_es","defaultValue","showSecond","check","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","initialState","items","loading","editEventModalOpen","modalData","combineReducers","arguments","length","undefined","action","objectSpread","payload","filter","toConsumableArray","i","middleWare","thunk","store","createStore","rootReducer","applyMiddleware","apply","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","db","push","set","child","remove","app","firebase","initializeApp","database","ref","on","snap","val","es","minWidth","components_AppNavbar","components_ItemModal","components_ShoppingList","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35fa4f23.chunk.js","sourcesContent":["import {\r\n    HANDLE_ADD_EVENT_MODAL\r\n} from './types'\r\n\r\nexport const handleAddModal = value => ({\r\n    type: HANDLE_ADD_EVENT_MODAL,\r\n    value\r\n})","export const GET_ITEMS = \"GET_ITEMS\";\r\nexport const ADD_ITEM = \"ADD_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\r\n\r\nexport const HANDLE_ADD_EVENT_MODAL = \"HANDLE_ADD_EVENT_MODAL\";\r\nexport const HANDLE_EDIT_EVENT_MODAL = \"HANDLE_EDIT_EVENT_MODAL\";\r\n\r\nexport const ADD_EVENT = \"ADD_EVENT\";\r\nexport const DELETE_EVENT = 'DELETE_EVENT'\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Container\r\n} from \"reactstrap\";\r\nimport { connect } from 'react-redux'\r\n\r\nimport{ handleAddModal } from '../actions/modalActions'\r\n\r\nimport './style.css'\r\n\r\nclass AppNavbar extends Component {\r\n  render() {\r\n    const { dispatch } = this.props;\r\n    return (\r\n      <div className=\"app-navbar\">\r\n        <Container className=\"header-container\">\r\n          <div className=\"header-content\">\r\n            <div className=\"header-left-column\">\r\n              <h6 style={{color: 'white'}}>Мой календарь</h6>\r\n              <div className=\"heder-buttons\">\r\n                <Button\r\n                  onClick={() => dispatch(handleAddModal(true))}\r\n                  style={{\r\n                    background: '#a9d85f',\r\n                    border: 'none',\r\n                    marginRight: 30\r\n                  }}\r\n                >\r\n                  Событие +\r\n                </Button>\r\n                <Button \r\n                  onClick={() => window.location.reload()}\r\n                  style={{\r\n                    background: 'transparent',\r\n                    border: '1px solid #a9d85f'\r\n                  }}>\r\n                  Обновить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"header-right-column\">\r\n              <h3>Друзья, мои походы пока ещё <br />\r\n                не закончились, делюсь с вами!</h3>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => ({state}), \r\n  dispatch => ({dispatch})\r\n)(AppNavbar);\r\n","import React, { Component } from \"react\";\r\nimport { Container, ListGroup, ListGroupItem, Button, Col } from \"reactstrap\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ShoppingList extends Component {\r\n  state = {\r\n    hover: false,\r\n  }\r\n\r\n  deleteEvent = id => {\r\n    this.props.deleteEvent(id)\r\n  };\r\n\r\n  toggleHover = (id, hover) =>{\r\n    this.setState({hover, hoverId: id})\r\n  }\r\n  render() {\r\n    const { events } = this.props.event;\r\n    const { hoverId, hover } = this.state;\r\n    return (\r\n      <div style={{ background: '#f6f6f6'}}>\r\n        <Container style={{height: '100vh'}}>\r\n          <ListGroup>\r\n            <TransitionGroup className=\"shopping-list\" style={{marginTop: 10}}>\r\n              {events.map(({ _id, name, eventTime, eventDescription, eventImportant }) => (\r\n                <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                  <ListGroupItem \r\n                    className=\"event-item\"\r\n                    onMouseEnter={() => this.toggleHover(_id, true)} \r\n                    onMouseLeave={() => this.toggleHover(null, false)}\r\n                    style={{\r\n                      margin: '10px auto',\r\n                      border: 'none',\r\n                      borderLeft: `${hoverId === _id && hover ? \r\n                        '7px' : '3px'} solid ${eventImportant ? '#ff7eb5' : '#a9d85f'}`,\r\n                      borderRadius: 2,\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between'\r\n                    }}>\r\n                   <div className='event-time'>\r\n                     <h3>{eventTime}</h3>\r\n                   </div>\r\n                   <div className='event-desc'>\r\n                   <h3>{name}</h3>\r\n                   <p>{eventDescription}</p>\r\n                   </div>\r\n                   <div className='event-delete'>\r\n                     <h6 onClick={() => this.deleteEvent(_id)} style={{cursor: 'pointer'}}>X</h6>\r\n                   </div>\r\n                  </ListGroupItem>\r\n                </CSSTransition>\r\n              ))}\r\n            </TransitionGroup>\r\n          </ListGroup>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nShoppingList.propTypes = {\r\n  // getItems: PropTypes.func.isRequired,\r\n  item: PropTypes.object.isRequired,\r\n  event: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  event: state.event\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatch => ({dispatch})\r\n)(ShoppingList);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  FormFeedback,\r\n} from \"reactstrap\";\r\nimport TimePicker from 'rc-time-picker';\r\nimport { connect } from \"react-redux\";\r\nimport uuid from 'uuid';\r\nimport moment from 'moment';\r\nimport 'rc-time-picker/assets/index.css';\r\n\r\nimport { handleAddModal } from \"../actions/modalActions\";\r\n\r\nclass ItemModal extends Component {\r\n  state = {\r\n    name: \"\",\r\n    eventTime: moment(),\r\n    eventDescription: 'Описание не указанно',\r\n    eventImportant: false,\r\n    onFocus: \"\",\r\n    nameInvalid: false,\r\n  };\r\n\r\n  toggle = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(handleAddModal(false))\r\n  };\r\n\r\n  addEvent = e => {\r\n    const {\r\n      name,\r\n      eventTime,\r\n      eventDescription,\r\n      eventImportant\r\n    } = this.state;\r\n\r\n    if(name !== ''){\r\n      const newEvent = {\r\n        name,\r\n        eventTime: eventTime ? eventTime.format('HH:mm') : moment().format('HH:mm'),\r\n        eventDescription,\r\n        eventImportant,\r\n        _id: uuid()\r\n      };\r\n\r\n      this.props.saveEvent(newEvent)\r\n  \r\n      // this.props.dispatch(addEvent(newEvent))\r\n  \r\n      this.toggle();\r\n      this.setState({\r\n        name: \"\",\r\n        eventTime: moment(),\r\n        eventDescription: 'Описание не указанно',\r\n        eventImportant: false,\r\n        onFocus: \"\",\r\n        nameInvalid: false,\r\n      })\r\n    } else {\r\n        this.setState({nameInvalid: true})\r\n    }\r\n  };\r\n\r\n  checkBoxChange = () => {\r\n    const { eventImportant } = this.state;\r\n    this.setState({ eventImportant: !eventImportant });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onFocus = e => {\r\n    this.setState({ ['onFocus']: e.target.name });\r\n  }\r\n\r\n  onBlur = e => {\r\n    switch(e.target.name){\r\n      case 'name':\r\n        if(e.target.value === '') {\r\n          this.setState({nameInvalid: true})\r\n        } else {\r\n          this.setState({nameInvalid: false})\r\n        }\r\n    }\r\n  }\r\n\r\n  timeChanged = eventTime => {\r\n    this.setState({ eventTime });\r\n  }\r\n  render() {\r\n    const { modalHandler } = this.props;\r\n    const {\r\n      nameInvalid,\r\n      descriptionInvalid\r\n    } = this.state;\r\n    return (\r\n      <Modal isOpen={modalHandler.addEventModalOpen}>\r\n        <ModalHeader toggle={this.toggle} style={{border: 'none'}}/>\r\n        <ModalBody>\r\n          <Form >\r\n            <FormGroup style={{display:'flex', flexDirection: 'column'}}>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"item\"\r\n                placeholder=\"Событие\"\r\n                onChange={this.onChange}\r\n                invalid={nameInvalid}\r\n                // onFocus={this.onFocus}\r\n                onBlur={this.onBlur}\r\n                // style={{\r\n                //   all: 'unset',\r\n                //   border: 'none',\r\n                //   borderBottom: onFocus === 'name' ? '2px solid #a9d85f' : \r\n                //     '1px solid #cccccc'\r\n                // }}\r\n              />\r\n              <FormFeedback>Название обязательно!</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <TimePicker \r\n                defaultValue={moment()} \r\n                // placeholder=\"Время\"\r\n                showSecond={false} \r\n                onChange={this.timeChanged}\r\n              /> <span style={{color: '#495057'}}>Время начала</span>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Input \r\n                type=\"textarea\"\r\n                placeholder=\"Описание\"\r\n                name=\"eventDescription\"\r\n                invalid={descriptionInvalid}\r\n                onChange={this.onChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input \r\n                  type=\"checkbox\" \r\n                  name=\"eventImportant\"\r\n                  onChange={this.checkBoxChange}\r\n                /> Пометить событие как важное\r\n              </Label>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button\r\n                onClick={() => this.addEvent()}\r\n                style={{\r\n                  marginTop: \"2rem\",\r\n                  background: '#a9d85f',\r\n                  border: 'none'\r\n                }}\r\n              >\r\n                Готово\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  item: state.item,\r\n  modalHandler: state.modalHandler\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  dispatch => ({dispatch})\r\n)(ItemModal);\r\n","export const config = {\r\n    apiKey: \"AIzaSyBo564hzKyaNN-tcDGje1hjbAl1XUxxhfs\",\r\n    authDomain: \"mst-task.firebaseapp.com\",\r\n    databaseURL: \"https://mst-task.firebaseio.com\",\r\n    projectId: \"mst-task\",\r\n    storageBucket: \"mst-task.appspot.com\",\r\n    messagingSenderId: \"990000810916\"\r\n};","import {\r\n  GET_ITEMS,\r\n  ADD_ITEM,\r\n  DELETE_ITEM,\r\n  ITEMS_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  items: [],\r\n  loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n        loading: false\r\n      };\r\n    case DELETE_ITEM:\r\n      return {\r\n        ...state,\r\n        items: state.items.filter(item => item._id !== action.payload)\r\n      };\r\n    case ADD_ITEM:\r\n      return {\r\n        ...state,\r\n        items: [action.payload, ...state.items]\r\n      };\r\n    case ITEMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { \r\n    HANDLE_ADD_EVENT_MODAL,\r\n    HANDLE_EDIT_EVENT_MODAL\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    addEventModalOpen: false,\r\n    editEventModalOpen: false,\r\n    modalData: []\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case HANDLE_ADD_EVENT_MODAL:\r\n        return {\r\n          ...state,\r\n          addEventModalOpen: action.value,\r\n        };\r\n      case HANDLE_EDIT_EVENT_MODAL:\r\n        return {\r\n          ...state,\r\n        editEventModalOpen: action.value,\r\n        modalData: action.modalData\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import {\r\n    ADD_EVENT,\r\n    DELETE_EVENT\r\n  } from \"../actions/types\";\r\n\r\n  const initialState = {\r\n    events: []\r\n  };\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_EVENT:\r\n        return {\r\n          ...state,\r\n          events: [...state.events, action.event],\r\n        };\r\n      case DELETE_EVENT:\r\n        return {\r\n          ...state,\r\n          events: state.events.filter(i => action.id !== i._id),\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport modalHandlerReducer from \"./modalHandlerReducer\";\r\nimport eventsReducer from \"./eventsReducer\";\r\n\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  modalHandler: modalHandlerReducer,\r\n  event: eventsReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  applyMiddleware(...middleWare)\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport AppNavbar from \"./components/AppNavbar\";\r\nimport ShoppingList from \"./components/ShoppingList\";\r\nimport ItemModalComponent from \"./components/ItemModal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport { config } from './config/config';\r\nimport firebase from 'firebase';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport { addEvent, deleteEvent } from './actions/eventsActions'\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.app = firebase.initializeApp(config);\r\n    this.db =  this.app.database().ref().child('events')\r\n  }\r\n\r\n  saveEvent = event => {\r\n    const newEvent = this.db.push();\r\n    newEvent.set(event)\r\n  }\r\n\r\n  deleteEvent = id => {\r\n    this.db.child(id).remove()\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.db.on('child_added', snap => {\r\n      const event = {\r\n        name: snap.val().name,\r\n        eventDescription: snap.val().eventDescription,\r\n        eventImportant: snap.val().eventImportant,\r\n        eventTime: snap.val().eventTime,\r\n        _id: snap.key\r\n      }\r\n      store.dispatch(addEvent(event))\r\n    })\r\n\r\n    this.db.on('child_removed', snap => {\r\n      store.dispatch(deleteEvent(snap.key))\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div style={{minWidth: 460}}>\r\n          <AppNavbar />\r\n          <ItemModalComponent saveEvent={event => this.saveEvent(event)}/>\r\n          <ShoppingList deleteEvent={id => this.deleteEvent(id)}/>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ADD_EVENT } from \"./types\";\r\n\r\nexport const addEvent = event => ({\r\n    type: 'ADD_EVENT',\r\n    event\r\n});\r\n\r\nexport const deleteEvent = id => ({\r\n    type: 'DELETE_EVENT',\r\n    id\r\n});","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}